<app>
  <div >
    <router>
      <header class="row header">
        <nav class="menu column navbar navbar-expand-lg navbar-light ">
          <a class="navbar-brand logo">MovieO</a>
          <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" id="navbarSupportedContent">
           <ul class="navbar-nav me-auto mb-2 mb-lg-0">
              <li class="nav-item">
                <a
                  each={page in state.pages}
                  class={state.activePage === page ? 'active' : '' }
                  href={page.path}>
                  {page.label}
                </a>
              </li>
            </ul>    
            <shearch-form/> 
          </div>
        </nav>
      </header>
      

      <div if={state.showNotFound} class="row">
        <div class="column column-60">
          <not-found />
        </div>
      </div>
      <div if={!state.showNotFound} class="row">
        <div  class="column column-60">
          <route each={page in state.pages} path={page.path} hash={page.hash}>
            <main  is={page.componentName}/>
          </route>
        </div>
      </div>
    </router>
    <section id="location" >
      <div id= "container-movie"> <div>
    </section>
  </div>

  <script>
    import { Router, Route, route, toRegexp, match } from '@riotjs/route'
    import lazy from '@riotjs/lazy'
    import Loader from './components/includes/loader/loader.riot'
    import NotFound from './pages/not-found.riot'
    import pages from './pages'

    export default {
      components: {
        Router,
        Route,
        NotFound,
        Home: lazy(Loader, () => import(
          /* webpackPrefetch: true, webpackChunkName: 'pages/home' */
          './pages/home.riot'
        )),
        About: lazy(Loader, () => import(
          /* webpackPrefetch: true, webpackChunkName: 'pages/about' */
          './pages/about.riot'
        )),
        Trends: lazy(Loader, () => import(
          /* webpackPrefetch: true, webpackChunkName: 'pages/about' */
          './pages/trends.riot'
        )),
         Category: lazy(Loader, () => import(
          /* webpackPrefetch: true, webpackChunkName: 'pages/about' */
          './pages/category.riot'
        ))
      },
      state: {
        pages,
        showNotFound: false,
        activePage: null
      },
      onBeforeMount({ isServer }) {
        // create a stream on all routes to catch the not-found page
        this.anyRouteStream = route('(.*)')
        this.anyRouteStream.on.value(this.onAnyRoute)
      },
      onAnyRoute(path) {
        // show the not found page if none of the page paths are matched
        const activePage = pages.find(p => match(path.pathname, toRegexp(p.path)))

        this.update({
          activePage,
          showNotFound: !activePage
        })
      },
      onBeforeUnmount() {
        this.anyRouteStream.end()
      }
    }
  </script>

  <style>
    .header{
      display: flex;
      align-items: center;
      background-color: #384259;
      justify-content: center;
      align-content: center;
      padding-left: 2vh;
      box-shadow: 
      rgba(0, 0, 0, 0.4) 0px 2px 4px, 
      rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, 
      rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
    }
    .menu {
      margin: 0.5rem -0.5rem;
      color:#f73859;
      display: flex;
      align-content: center;
      align-items: center;
      background-color:trasparent !important;
    }
    .logo{
      color:#F73859 !important;
      font-size:4vh;
    }
    .menu a {
      padding: 0 1rem;
      color: #c4edde;
    }

    .menu a.active.active {
      font-weight: bold;
      text-decoration: none;
    }

    .menu a:hover, .menu a:focus, .menu a:active {
      text-decoration: underline;

    }
    #container-movie {
      display: grid;
      grid-gap:2vh;
      justify-content: center;
      align-items: center;
    }

    h1{ 
       margin:2vh;
        color:#c4edde;
        text-align: center;
        grid-column: 1/ span 2;
        grid-row: 1 / Line2;
    }

    .movie-container{
         width: 23vh;
         display: inline-block;
         color: white;
         text-align: center;
         padding: 14px;
         box-shadow: 
         rgba(0, 0, 0, 0.4) 0px 2px 4px, 
         rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, 
         rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
      }
      
      .movie-img{
        width: 93%
      }

     @media (min-width: 1000px) {
       h1{
        grid-column: 1/ span 4;
       }
      }
  </style>
</app>
